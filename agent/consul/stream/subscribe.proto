syntax = "proto3";

package stream;

import "structs.proto";

service Consul {
    rpc Subscribe(SubscribeRequest) returns (stream Event) {}
} 

enum Topic {
    ServiceHealth = 0;
    ACLTokens = 1;
    ACLPolicies = 2;
    ACLRoles = 3;
}
  
message SubscribeRequest {
    Topic Topic = 1;
    string Key = 2;
    string Token = 3;
    uint64 Index = 4;
    string Filter = 5;
    Filters TopicFilters = 6;
}

message Filters {
    bool Connect = 1;
    repeated string Tags = 2;
}

message Event {
    Topic Topic = 1;
    string Key = 2;
    uint64 Index = 3;
    repeated ACLRule RequiredACLs = 4;
    oneof Payload {
        ServiceHealthUpdate ServiceHealth = 6;
        ACLTokenUpdate ACLToken = 7;
        ACLPolicyUpdate ACLPolicy = 8;
        ACLRoleUpdate ACLRole = 9;

        // EndOfSnapshot indicates the event stream for the initial snapshot has ended.
        bool EndOfSnapshot = 10;

        // ReloadStream indicates the client should re-start the Subscribe call.
        bool ReloadStream = 11;
    }
}

enum CatalogOp {
    Register = 0;
    Deregister = 1;
}

enum ACLOp {
    Update = 0;
    Delete = 1;
}

enum ACLResource {
    ServiceACL = 0;
    NodeACL = 1;
}

message ACLRule {
    ACLResource Resource = 1;
    string Segment = 2; 
}

message ServiceHealthUpdate {
    CatalogOp Op = 1;
    CheckServiceNode CheckServiceNode = 2;
}

message ACLTokenUpdate {
    ACLOp Op = 1;
    ACLToken Token = 2;
}

message ACLPolicyUpdate {
    ACLOp Op = 1;
    string PolicyID = 2;
}

message ACLRoleUpdate {
    ACLOp Op = 1;
    string RoleID = 2;
}